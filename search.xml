<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F03%2Fhello-world%2F</url>
    <content type="text"><![CDATA[类成员变量：首字母小写 驼峰原则局部变量：首字母小写 驼峰原则常量：大写字母和下划线:MAX_VALUE类名：首字母大写和驼峰原则 HelloWorld方法名：首字母小写和驼峰原则 2.6基本数据类型括号内的为字节 byte (1) short(2) int(4 -2e31~2e31 22e左右) long(8 2e63) long b =55eL; double(8) float(4)默认是double类型二进制浮点数不能精确的表示0.1、0.01、0.001这样10的负次幂。并不是所有的小数都能可以精确的用二进制浮点数表示/.浮点数存在舍入误差，数字不能精确表示。如果需要进行不产生舍入误差的精确数字计算，需要使用BigDecimal类。chr(2) ‘A’ !=”A” 前者是字符 后者字符串boolean引用数据类型 4个字节 引用对象地址类接口数组 逻辑运算符逻辑与&amp;( 与)两个操作数为true，结果才是true，否则是false逻辑或|(或)两个操作数有一个是true，结果就是true短路与&amp;&amp;( 与)只要有一个为false，则直接返回false短路或||(或)只要有一个为true， 则直接返回true逻辑非!（非）取反：!false为true，!true为false逻辑异或^（异或）相同为false，不同为true]]></content>
  </entry>
  <entry>
    <title><![CDATA[Java语言基础组成]]></title>
    <url>%2F2019%2F01%2Fjava02%2F</url>
    <content type="text"><![CDATA[1. 关键字被Java语言赋予了特殊含义的单词。 特点：关键字中所有字母小写 定义数据类型 12class byte short int interface void long double char float boolean 定义数据类型值 1true false null 定义流程控制 12if else switch case default while do for break continue return 定义访问权限修饰符 1private protected public 定义类、函数、变量 1abstract final static synchronized 定义类与类间关系 1extends implements 定义建立、引用、判断实例 1new this super instanceof 处理异常 1try catch finally throw throws 用于包 1package import 其他 1native strictfp transient volatile assert 2. 标识符由26个字符（大小写）、数字、_、$组成规则： 数字不开头 不能用关键字 egclass Demo1testclass Demo_1$testname$subname 标识符要有意义类名：首字母大写。若由多个单词组成，每个单词首字母大写。以下划线开头：局部变量 3. 注释12345678910111213/**文档注释*/class Demo&#123; //这是单行注释 public static void main(String[] args)&#123; System.out.println("hello java!"); /* 多行注释 多行注释 多行注释 */ &#125;&#125; 12345678910111213141516171819/*需求：练习hello word思路：1. 定义一个类2. 定义一个主函数,保证程序独立运行3. 在控制台看到，使用输出语句步骤：1. class2. mian3. System.out.println("hello word")*/class Demo&#123; public static void main(String[] args)&#123; System.out.println("hello java!"); &#125;&#125; 4. 常量与变量常量常量是不能改变的数值 整数常量 二进制: 0 1八进制: 0 1 2 3 4 5 6 7 以0开头十进制: 0 1 2 3 4 5 6 7 8 9十六进制: 0 1 2 3 4 5 6 7 8 9 a b c d e f 以0x开头 小数常量 布尔常量：true、false 字符常量：’’ 字符串常量：”” null常量：null 变量5. 运算符6. 语句7. 函数8. 数组]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java基础之多种数据类型]]></title>
    <url>%2F2019%2F01%2Fjava03%2F</url>
    <content type="text"><![CDATA[1. StringBuffer和StringBuilderStringBuffer 类是可变字符串类，创建 StringBuffer 类的对象后可以随意修改字符串的内容。每个 StringBuffer 类的对象都能够存储指定容量的字符串，如果字符串的长度超过了 StringBuffer 类对象的容量，则该对象的容量会自动扩大。 创建 StringBuffer 类 12class byte short int interface void long double char float boolean 定义数据类型值 1true false null 定义流程控制 12if else switch case default while do for break continue return 定义访问权限修饰符 1private protected public 定义类、函数、变量 1abstract final static synchronized 定义类与类间关系 1extends implements 定义建立、引用、判断实例 1new this super instanceof 处理异常 1try catch finally throw throws 用于包 1package import 其他 1native strictfp transient volatile assert 2. 标识符由26个字符（大小写）、数字、_、$组成规则： 数字不开头 不能用关键字 egclass Demo1testclass Demo_1$testname$subname 标识符要有意义类名：首字母大写。若由多个单词组成，每个单词首字母大写。以下划线开头：局部变量 3. 注释12345678910111213/**文档注释*/class Demo&#123; //这是单行注释 public static void main(String[] args)&#123; System.out.println("hello java!"); /* 多行注释 多行注释 多行注释 */ &#125;&#125; 12345678910111213141516171819/*需求：练习hello word思路：1. 定义一个类2. 定义一个主函数,保证程序独立运行3. 在控制台看到，使用输出语句步骤：1. class2. mian3. System.out.println("hello word")*/class Demo&#123; public static void main(String[] args)&#123; System.out.println("hello java!"); &#125;&#125; 4. 常量与变量常量常量是不能改变的数值 整数常量 二进制: 0 1八进制: 0 1 2 3 4 5 6 7 以0开头十进制: 0 1 2 3 4 5 6 7 8 9十六进制: 0 1 2 3 4 5 6 7 8 9 a b c d e f 以0x开头 小数常量 布尔常量：true、false 字符常量：’’ 字符串常量：”” null常量：null 变量5. 运算符6. 语句7. 函数8. 数组]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test2]]></title>
    <url>%2F2019%2F01%2Ftest2%2F</url>
    <content type="text"><![CDATA[dsf 12int a = 1;char d = 2; Alice->Bob: Hello Bob, how are you? Note right of Bob: Bob thinks Bob-->Alice: I am good thanks!{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12,"theme":"simple"} var code = document.getElementById("sequence-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-0-options").value)); var diagram = Diagram.parse(code); diagram.drawSVG("sequence-0", options);//定义部分 st=>start: Start:>http://www.google.com[blank] e=>end:>http://www.google.com op1=>operation: My Operation sub1=>subroutine: My Subroutine cond=>condition: Yes or No?:>http://www.google.com io=>inputoutput: catch something... //判断和位置控制 st->op1->cond cond(yes)->io->e cond(no)->sub1(right)->op1{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12,"theme":"simple"} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options);]]></content>
  </entry>
  <entry>
    <title><![CDATA[test1]]></title>
    <url>%2F2019%2F01%2Ftest1%2F</url>
    <content type="text"><![CDATA[\sum_{i=0}N\int_{a}^bg(t,i)\text{d}t$\sum_{i=0}^N\int_{a}^{b}g(t,i)\text{d}t$ \begin{matrix} 1&0&0\\ 0&1&0\\ 0&0&1\\ \end{matrix}\begin{bmatrix} {a_{11}}&{a_{12}}&{\cdots}&{a_{1n}}\\ {a_{21}}&{a_{22}}&{\cdots}&{a_{2n}}\\ {\vdots}&{\vdots}&{\ddots}&{\vdots}\\ {a_{m1}}&{a_{m2}}&{\cdots}&{a_{mn}}\\ \end{bmatrix}\begin{array}{c|lll} {↓}&{a}&{b}&{c}\\ \hline {R_1}&{c}&{b}&{a}\\ {R_2}&{b}&{c}&{c}\\ \end{array}\begin{cases} a_1x+b_1y+c_1z=d_1\\ a_2x+b_2y+c_2z=d_2\\ a_3x+b_3y+c_3z=d_3\\ \end{cases}]]></content>
  </entry>
  <entry>
    <title><![CDATA[Java语言概述]]></title>
    <url>%2F2019%2F01%2FJava01%2F</url>
    <content type="text"><![CDATA[1. Java语言的三种技术架构 JAVAEE 企业版 web应用程序 JAVASE 标准版 桌面应用程序 JAVAME 小型版 手机应用程序 2. Java跨平台性（Java虚拟机） win版 JVM linux版 JVM mac版 JVM 3. Java环境搭建 JRE Java运行环境：JVM、核心类库 JDK Java开发工具包（包含JRE）：编译工具、打包工具]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
</search>
